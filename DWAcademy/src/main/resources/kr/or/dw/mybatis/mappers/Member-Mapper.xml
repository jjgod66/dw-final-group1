<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dw.dao.MemberDAO">
	<select id="selectAllMemberInfo" resultType="Map">
		SELECT *
		  FROM member
		 WHERE mem_id = #{id}
	</select>

	<select id="selectMemberById" resultType="Map">
		SELECT *
		  FROM accountCheck
		 WHERE id = #{mem_id}
	</select>
	
	<update id="updateLastLoginDt">
		UPDATE member SET lastlogindate = SYSDATE
		WHERE mem_id = #{id}
	</update>
	
	
	<insert id="insert">
		INSERT INTO member(mem_cd, mem_id, mem_pwd, mem_name, mem_email, mem_bir, mem_phone, regdate, mem_addr, mem_addr_detail, mem_zipcode, gb_email_alert, gb_sms_alert, mem_grade, gb_del, gb_ban, gb_sleep)
					VALUES('M' || TO_char(SYSDATE, 'YYYYMMDD') || lpad(mem_seq.nextVal,4,0)
						  ,#{mem_id}
						  ,#{mem_pwd}
						  ,#{mem_name}
						  ,#{mem_email}
						  ,#{mem_bir}
						  ,#{mem_phone}
						  ,SYSDATE
						  ,#{mem_addr}
						  ,#{mem_addr_detail}
						  ,#{mem_zipcode}
						  ,#{gb_email_alert}
						  ,#{gb_sms_alert}
						  ,'N'
						  ,'N'
						  ,'N'
						  ,'N'
							)
	</insert>
	
	<select id="selectMemberCode" resultType="Map">
		SELECT *
		  FROM accountCheck
		 WHERE cd = #{mem_cd}
	</select>
	
	<select id="CheckMember" resultType="Map">
		SELECT *
		  FROM accountCheck
		 WHERE phone = #{mem_phone}
	</select>
	
	<select id="CheckMemberEmail" resultType="Map">
		SELECT email
		  FROM accountCheck
		 WHERE email = #{email}
	</select>
	
	<update id="additionUpdate">
		UPDATE member SET gb_email_alert = #{gb_email_alert},
						  gb_sms_alert = #{gb_sms_alert}
		WHERE mem_id = #{ID}
	</update>
	
	<select id="selectMemMonthResCnt" resultType="Map">
		SELECT m.mem_cd, nvl(rescnt, 0) rescnt
		FROM (
			SELECT COUNT(*) rescnt, mem_cd
			FROM reservation
			WHERE to_char(resdate, 'yyyyMM') = to_char(ADD_MONTHS(sysdate, -1), 'yyyyMM')
			GROUP BY mem_cd
			) c, MEMBER m
		WHERE c.mem_cd(+) = m.mem_cd
	</select>
	
	<select id="select10000overMem" resultType="str">
		SELECT m.mem_cd
		FROM (
			SELECT sum(pricesum) pricesum, mem_cd
			FROM reservation
			WHERE to_char(resdate, 'yyyyMM') = to_char(ADD_MONTHS(sysdate, -1), 'yyyyMM')
			AND gb_cancel = 'N'
			GROUP BY mem_cd
			) c, MEMBER m
		WHERE c.mem_cd(+) = m.mem_cd
		AND pricesum >= 100000
	</select>
	
	<update id="updateMemGradeVIP">
		UPDATE member SET mem_grade = 'V' where mem_cd = #{mem_cd}
	</update>
	
	<update id="updateMemGradeNormal">
		UPDATE member SET mem_grade = 'N' where mem_cd = #{mem_cd}
	</update>
	
	<select id="selectNotLoginYearMem" resultType="str">
		SELECT mem_cd
		FROM MEMBER
		WHERE to_char(lastlogindate, 'yyyyMMdd') <![CDATA[<]]> to_char(add_months(sysdate,-12),'yyyyMMdd')
	</select>
	
	<update id="updateMemSleep">
		UPDATE member SET gb_sleep = 'Y' WHERE mem_cd = #{mem_cd}
	</update>
	
	<update id="updateMemUnSleep">
		UPDATE member SET gb_sleep = 'N' WHERE mem_phone = #{phone}
	</update>
	
	<update id="updateMemUnban">
		UPDATE member
		  SET gb_ban = 'N'
		 WHERE stopdate + 180 <![CDATA[<]]> SYSDATE
	</update>
	
	<select id="selectBuyInfoList" resultType="Map">
		SELECT mb.buydate, p.product_div, p.product_name, p.product_price, mp.gb_use, pd.refunddate, mem_product_cd, mb.merchant_uid, gb_one_use
		  FROM mem_buy mb, product p ,mem_product mp, pay_detail pd
			  ,(SELECT mb.merchant_uid, max(gb_use) gb_one_use
			  FROM mem_buy mb, mem_product mp
			  WHERE mb.merchant_uid = mp.merchant_uid
			  AND mb.mem_cd = #{mem_cd}
			  GROUP BY mb.merchant_uid
		 	 ) g
		 WHERE mb.mem_cd = #{mem_cd}
		   AND p.product_cd = mp.product_cd
		   AND mb.merchant_uid = mp.merchant_uid
		   AND mb.merchant_uid = pd.merchant_uid
		   AND mb.merchant_uid = g.merchant_uid
		   ORDER BY buydate DESC
	</select>
	
	<select id="select3BuyInfo" resultType="Map">
		SELECT *
		  FROM (
					SELECT mb.buydate, p.product_div, p.product_name, p.product_price, mp.gb_use, pd.refunddate, mem_product_cd, mb.merchant_uid, gb_one_use
					  FROM mem_buy mb, product p ,mem_product mp, pay_detail pd
					  ,(SELECT mb.merchant_uid, max(gb_use) gb_one_use
					  FROM mem_buy mb, mem_product mp
					  WHERE mb.merchant_uid = mp.merchant_uid
					  AND mb.mem_cd = #{mem_cd}
					  GROUP BY mb.merchant_uid
				 	 ) g
					 WHERE mb.mem_cd = #{mem_cd}
					   AND p.product_cd = mp.product_cd
				       AND mb.merchant_uid = mp.merchant_uid
					   AND mb.merchant_uid = pd.merchant_uid
					    AND mb.merchant_uid = g.merchant_uid
					   ORDER BY buydate desc
				)
		 WHERE rownum <![CDATA[<=]]> 3
			
			
	</select>
	
	<select id="searchBuyInfo" resultType="Map">
		SELECT mb.buydate, p.product_div, p.product_name, p.product_price, mp.gb_use, pd.refunddate, mem_product_cd, mb.merchant_uid, gb_one_use
		  FROM mem_buy mb, product p ,mem_product mp, pay_detail pd
			  ,(SELECT mb.merchant_uid, max(gb_use) gb_one_use
			  FROM mem_buy mb, mem_product mp
			  WHERE mb.merchant_uid = mp.merchant_uid
			  AND mb.mem_cd = #{mem_cd}
			  GROUP BY mb.merchant_uid
		 	 ) g
		 WHERE mb.mem_cd = #{mem_cd}
		   AND p.product_cd = mp.product_cd
		   AND mb.merchant_uid = mp.merchant_uid
		   AND mb.merchant_uid = pd.merchant_uid
		   AND mb.merchant_uid = g.merchant_uid
		   <if test="cri.monthKeyword != null and cri.monthKeyword != ''.toString()">
			   AND TO_CHAR(buydate, 'YYYYMM') like #{cri.monthKeyword}
		   </if>
		   ORDER BY buydate desc
	</select>
	
	<select id="selectBuyInfoListCnt" resultType="int">
		SELECT count(*)
		  FROM mem_buy mb, product p ,mem_product mp, pay_detail pd
		 WHERE mb.mem_cd = #{mem_cd}
		   AND p.product_cd = mb.product_cd
		   AND mb.merchant_uid = mp.merchant_uid
		   AND mb.merchant_uid = pd.merchant_uid
	</select>
	
	<select id="searchBuyInfoListCnt" resultType="int">
		SELECT count(*)
		  FROM mem_buy mb, product p ,mem_product mp, pay_detail pd
		 WHERE mb.mem_cd = #{mem_cd}
		   AND p.product_cd = mb.product_cd
		   AND mb.merchant_uid = mp.merchant_uid
		   AND mb.merchant_uid = pd.merchant_uid
		   <if test="cri.monthKeyword != null and cri.monthKeyword != ''.toString()">
			   AND TO_CHAR(buydate, 'YYYYMM') like #{cri.monthKeyword}
		   </if>
	</select>
	
	<select id="selectAllGenreList" resultType="genre">
		SELECT *
		  FROM genre
	</select>
	
	<delete id="deleteMemLikeThr">
		DELETE mem_like_theater WHERE mem_cd = #{mem_cd}
	</delete>
	
	<update id="updateMemLikeThr">
		<foreach collection="list" item="thrNames" separator=" " open="INSERT ALL" close="SELECT * FROM dual">
		INTO mem_like_theater(mem_cd, thr_name)
		VALUES (#{mem_cd}, #{thrNames})
		</foreach>
	</update>
	
	<delete id="deleteMemLikeGenre">
		delete mem_like_genre WHERE mem_cd = #{mem_cd}
	</delete>
	
	<update id="updateMemLikeGenre">
		<foreach collection="list" item="genreNames" separator=" " open="INSERT ALL" close="SELECT * FROM dual">
			INTO mem_like_genre(mem_cd, genre_cd)
			VALUES (#{mem_cd}, #{genreNames})
		</foreach>
	</update>
	
	<select id="selectMemLikeGenre" resultType="Map">
		SELECT *
		  FROM mem_like_genre
		 WHERE mem_cd = #{mem_cd}
	</select>
	
	<update id="resginMember">
		UPDATE member SET mem_del = 'Y'
		 WHERE mem_cd = #{mem_cd}
	</update>
	
	<update id="memberInfoUpdate">
		UPDATE member SET 
							mem_phone = #{mem_phone}
							,mem_email = #{mem_email}
							,mem_zipcode = #{mem_zipcode}
							,mem_addr = #{mem_addr}
							,mem_addr_detail = #{mem_addr_detail}
							,mem_pic_path = #{mem_pic_path}
		 WHERE mem_cd = #{mem_cd}
	</update>
</mapper>