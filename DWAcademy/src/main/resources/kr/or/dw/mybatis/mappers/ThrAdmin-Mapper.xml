<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dw.dao.ThrAdminDAO">

	<sql id="searchNotice">
		AND notice_title LIKE '%' || #{keyword} || '%'
	</sql>
	
	<sql id="searchQna">
		<if test="searchType == 'a'.toString()">
		</if>
		<if test="searchType == 'b'.toString()">
			AND que_type = '일반문의'
		</if>
		<if test="searchType == 'c'.toString()">
			AND que_type = '제안'
		</if>
		<if test="searchType == 'd'.toString()">
			AND que_type = '칭찬'
		</if>
		<if test="searchType == 'e'.toString()">
			AND que_type = '불만'
		</if>
		<if test="searchType2 == 'b'.toString()">
			AND a.ans_content IS NULL
		</if>
		<if test="searchType2 == 'c'.toString()">
			AND a.ans_content IS NOT NULL
		</if>
		AND (
			que_title LIKE '%' || #{keyword} || '%'
			OR
			que_content LIKE '%' || #{keyword} || '%'
			OR
			writer_name LIKE '%' || #{keyword} || '%'
			)
	</sql>
	
	<sql id="searchEvent">
		AND (
			 event_title LIKE '%' || #{keyword} || '%'
			 OR
			 event_content LIKE '%' || #{keyword} || '%'
			)
	</sql>
	
	<sql id="searchPastEvent">
		AND (
			event_title LIKE '%' || #{keyword} || '%'
			)
	</sql>
	
	<select id="selectAllScreens" resultType="movie">
		SELECT *
		FROM movie
		WHERE enddate > sysdate
	</select>
	
	<select id="getTotalReCount1" resultType="int">
		SELECT count(*)
		FROM movie m, (
			SELECT m.movie_cd, count(*) reserve
			FROM movie m, screen s, reservation r
			WHERE 1=1
			AND m.movie_cd = s.movie_cd(+)
			AND s.screen_cd = r.screen_cd(+)
			AND TO_CHAR(resdate, 'YYYYMMDD') = TO_CHAR(sysdate-1,'YYYYMMDD')
			GROUP BY m.movie_cd
			) r
		WHERE m.movie_cd = r.movie_cd(+)
	</select>
	
		<select id="getAllMovieList" resultType="Map">
		SELECT *
		FROM movie
		WHERE enddate > sysdate
		</select>
	
	<select id="selectAllScreens1" resultType="movie">
		SELECT *
		FROM movie
		WHERE enddate > sysdate
	</select>
	
	 <select id="getTotalReCount" resultType="int">
       SELECT COUNT(*) FROM movie WHERE enddate > sysdate
    </select>
	
	
	<select id="selectAllStart" resultType="screen">
		SELEct *
		from screen
	</select>
	
	 <select id="selectList" parameterType="Map" resultType="movie">
        SELECT *
        FROM (
            SELECT m.*, ROW_NUMBER() OVER (ORDER BY OPENDATE DESC) AS rnum
            FROM movie m
        )
        WHERE rnum BETWEEN #{start} AND #{end}
    </select>
	
	<select id="selectAllRe" resultType="Map">
		SELECT t.THR_NAME, s.house_no, s.movie_cd, m.MOVIE_LENGTH, TO_CHAR(s.STARTDATE,'HH24:MI')as startTime, TO_CHAR( s.STARTDATE + (m.MOVIE_LENGTH)/(24*60),'HH24:MI' )AS EndTime,
		   TO_CHAR(LAG(s.STARTDATE + (m.MOVIE_LENGTH)/(24*60)) OVER (ORDER BY s.house_no, s.STARTDATE), 'yyyy-MM-dd HH24:MI:SS') AS before_movieEndTime,
		  TO_CHAR(round( NVL(  (s.STARTDATE - LAG(s.STARTDATE + (m.MOVIE_LENGTH)/(24*60)) OVER (ORDER BY s.house_no, s.STARTDATE)) * 24 * 60 ,0) )) AS re ,
		   s.screen_cd , m.MOVIE_NAME ,COUNT(t.THR_NAME) OVER () AS TCOUNT
		FROM screen s, movie m, theater t, house h
		WHERE 1=1
		    AND s.movie_cd = m.movie_cd
		    AND t.THR_NAME = h.THR_NAME
		    AND h.house_no = s.house_no
		    AND h.thr_name = '테스트123'
		    AND s.house_no = 1
		ORDER BY s.house_no
	</select>
	
	<select id="selectAllRe1" resultType="Map">
		SELECT t.THR_NAME, s.house_no, s.movie_cd, m.MOVIE_LENGTH, TO_CHAR(s.STARTDATE,'HH24:MI')as startTime, TO_CHAR( s.STARTDATE + (m.MOVIE_LENGTH)/(24*60),'HH24:MI' )AS EndTime,
		   TO_CHAR(LAG(s.STARTDATE + (m.MOVIE_LENGTH)/(24*60)) OVER (ORDER BY s.house_no, s.STARTDATE), 'yyyy-MM-dd HH24:MI:SS') AS before_movieEndTime,
		  TO_CHAR(round( NVL(  (s.STARTDATE - LAG(s.STARTDATE + (m.MOVIE_LENGTH)/(24*60)) OVER (ORDER BY s.house_no, s.STARTDATE)) * 24 * 60 ,0) )) AS re ,
		   s.screen_cd , m.MOVIE_NAME ,COUNT(t.THR_NAME) OVER () AS tcount
		FROM screen s, movie m, theater t, house h
		WHERE 1=1
		    AND s.movie_cd = m.movie_cd
		    AND t.THR_NAME = h.THR_NAME
		    AND h.house_no = s.house_no
		    AND h.thr_name = '테스트123'
		    AND s.house_no = 1
		ORDER BY s.house_no
	</select>
	
	<select id="selectSearchMovieList" resultType="Map">
		SELECT m.*, nvl(reserve,0)
		FROM movie m, (
			SELECT m.movie_cd, count(*) reserve
			FROM movie m, screen s, reservation r
			WHERE 1=1
			AND m.movie_cd = s.movie_cd(+)
			AND s.screen_cd = r.screen_cd(+)
			AND TO_CHAR(resdate, 'YYYYMMDD') = TO_CHAR(sysdate-1,'YYYYMMDD')
			GROUP BY m.movie_cd
			) r
		WHERE m.movie_cd = r.movie_cd(+)
		 <include refid="searchKeywordMov" />
		 <include refid="searchTypeMov" />
	</select>
	
	<select id="selectReservRatio" resultType="double">
		SELECT round((SELECT COUNT(*) 
  		  			   				 FROM movie m1, reservation r1, screen s1 
 					 				WHERE s1.movie_cd = #{movie_cd}
 					 				  AND m1.movie_cd = s1.movie_cd
 		   							  AND s1.screen_cd = r1.screen_cd 
		  							  AND TO_CHAR(r1.resdate, 'YYYYMMDD')  = TO_CHAR(sysdate-1,'YYYYMMDD'))
			       				 / 
			       				(SELECT DECODE((SELECT count(*) FROM RESERVATION r WHERE TO_CHAR(resdate, 'YYYYMMDD')  = TO_CHAR(sysdate-1,'YYYYMMDD')), 0, 1, (SELECT count(*) FROM RESERVATION r WHERE TO_CHAR(resdate, 'YYYYMMDD')  = TO_CHAR(sysdate-1,'YYYYMMDD'))) FROM DUAL)
		       				, 2) * 100 reserveRatio
 					   FROM dual
	</select>
	
	<select id="selectSearchMovieListCount" resultType="int">
		SELECT count(*)
		FROM movie m, (
			SELECT m.movie_cd, count(*) reserve
			FROM movie m, screen s, reservation r
			WHERE 1=1
			AND m.movie_cd = s.movie_cd(+)
			AND s.screen_cd = r.screen_cd(+)
			AND TO_CHAR(resdate, 'YYYYMMDD') = TO_CHAR(sysdate-1,'YYYYMMDD')
			GROUP BY m.movie_cd
			) r
		WHERE m.movie_cd = r.movie_cd(+)
		 <include refid="searchKeywordMov" />
		 <include refid="searchTypeMov" />
	</select>
	
	<sql id="searchKeywordMov">
 		<if test="keyword == 'f'.toString()"> 
	 		 <![CDATA[
				AND m.opendate > SYSDATE 
 			 ]]>  
 		</if>
		<if test="keyword == ''.toString()">
			<![CDATA[
				AND m.ENDDATE > SYSDATE 
 			 ]]> 
		</if>  
	</sql>
	
	<sql id="searchTypeMov">
		<if test="searchType == ''.toString()">
			ORDER BY r.reserve DESC NULLS last
		</if>
		<if test="searchType == 'r'.toString()">
			ORDER BY r.reserve DESC NULLS last
		</if>
		<if test="searchType == 'n'.toString()">
			ORDER BY m.movie_name ASC
		</if>
		<if test="searchType == 'd'.toString()">
			ORDER BY m.opendate ASC
		</if>
	</sql>
	
	
	
	
	
	
	
	
	<select id="selectThrByAdmin_cd" resultType="map">
		SELECT *
		  FROM theater
		 WHERE admin_cd = #{admin_cd}
	</select>
	
	<update id="modifyThrInfo">
		UPDATE theater
		   SET thr_info = #{thr_info}
		 WHERE admin_cd = #{admin_cd}
	</update>
	
	<select id="selectHouseListByAdmin_cd" resultType="map">
		SELECT h.* 
  		  FROM THEATER t , HOUSE h 
 		 WHERE t.THR_NAME = h.THR_NAME 
  		   AND t.ADMIN_CD = #{admin_cd}
  		   AND h.gb_del = 'N'
  		 ORDER BY house_no ASC
	</select>
	
	<insert id="insertHouse">
		INSERT INTO house
		 VALUES (
		 		house_seq.nextval
		 	   ,#{thr_name}
		 	   ,#{house_name}
		 	   ,#{house_row}
		 	   ,#{house_column}
		 	   ,'N'
		 		)
		 <selectKey resultType="int" keyProperty="house_no" order="AFTER">
			SELECT house_seq.currval FROM dual
		</selectKey>
	</insert>
	
	<select id="selectHouseByHouse_no" resultType="house">
		SELECT *
		  FROM house
		 WHERE house_no = #{house_no}
	</select>
	
	<select id="updateHouse">
		UPDATE house
		   SET house_name = #{house_name}
		      ,house_row = #{house_row}
		      ,house_column = #{house_column}
		 WHERE house_no = #{house_no}
	</select>

	<select id="selectRemainMoviesCnt" resultType="int">
		SELECT COUNT(*) 
		  FROM screen
		 WHERE house_no = #{house_no}
		   AND startdate > SYSDATE
	</select>
	
	<update id="deleteHouse">
		UPDATE house
		   SET gb_del = 'Y'
		 WHERE house_no = #{house_no}
	</update>

	<select id="selectNoticeList" resultType="notice">
		SELECT *
		  FROM notice
		 WHERE gb_del = 'N'
		   AND admin_cd = #{adminType}
		  <include refid="searchNotice"/>
		 ORDER BY notice_no DESC
	</select>
	
	<select id="selectSearchNoticeListCount" resultType="int">
		SELECT COUNT(*)
		  FROM notice
		 WHERE gb_del = 'N'
		   AND admin_cd = #{adminType}
		<include refid="searchNotice"/>
	</select>
	
	<insert id="insertNotice">
		INSERT INTO notice
					(
					 notice_no
					,admin_cd
					,notice_title
					,notice_content
					,notice_thr
					,regdate
					,gb_del
					)
			 VALUES (
			 		 notice_seq.nextval
			 		,#{admin_cd}
			 		,#{notice_title}
			 		,#{notice_content}
			 		,#{notice_thr}
			 		,SYSDATE
			 		,'N'
			 		)		
	</insert>
	
	<select id="selectQnaList" resultType="qna">
		SELECT q.*, a.*, t.ADMIN_CD 
		  FROM question q, answer a, THEATER t
		 WHERE q.que_sel = 'T'
		   AND q.que_no = a.que_no(+)
		   AND q.THR_NAME = t.THR_NAME (+)
		   AND t.admin_cd = #{adminType}
		 <include refid="searchQna"/>
		 ORDER BY q.que_no DESC
	</select>
	
	<select id="selectSearchQnaListCount" resultType="int">
		SELECT COUNT(*)
		  FROM question q, answer a, THEATER t
		 WHERE q.que_sel = 'T'
		   AND q.que_no = a.que_no(+)
		   AND q.THR_NAME = t.THR_NAME (+)
		   AND t.admin_cd = #{adminType}
		 <include refid="searchQna"/>
	</select>
	
	<insert id="insertAns">
		INSERT INTO answer
		     VALUES (#{que_no}, #{admin_cd}, #{ans_content}, SYSDATE)   
	</insert>
	
	<select id="selectEventList" resultType="event">
		SELECT e.* 
 	  	  FROM event e, THEATER t 
 		 WHERE e.RELATE_CD = t.ADMIN_CD
		   AND enddate <![CDATA[>=]]> SYSDATE
		   AND t.admin_cd = #{adminType}
		   AND e.event_div = '극장'
		 <include refid="searchEvent"/>
		 ORDER BY startdate DESC
	</select>
	
	<select id="selectSearchEventListCount" resultType="int">
		SELECT COUNT(*)
 	  	  FROM event e, THEATER t 
 		 WHERE e.RELATE_CD = t.ADMIN_CD
		   AND enddate <![CDATA[>=]]> SYSDATE
		   AND t.admin_cd = #{adminType}
		   AND e.event_div = '극장'
		 <include refid="searchEvent"/>
	</select>
	
	<select id="selectEventListforPast" resultType="event">
		SELECT *
		  FROM event e, winner_board w
		 WHERE enddate <![CDATA[<]]> SYSDATE
		   AND e.event_no = w.event_no(+)
		   AND e.relate_cd = #{adminType}
		 <include refid="searchPastEvent"/>
	</select>
	
	<select id="selectEventListforPastCount" resultType="int">
		SELECT COUNT(*)
		  FROM event e, winner_board w
		 WHERE enddate <![CDATA[<]]> SYSDATE
		   AND e.event_no = w.event_no(+)
		   AND e.relate_cd = #{adminType}
		 <include refid="searchPastEvent"/>
	</select>
	
	<select id="selectMovieListforMovieMain" resultType="map">
		SELECT MAX(m.MOVIE_CD) movie_cd, MAX(m.MOVIE_NAME) movie_name, MAX(m.MOVIE_INFO) MOVIE_INFO 
			 , MAX(m.MOVIE_DIRECTOR) movie_director, MAX(m.MOVIE_ACTOR) movie_actor, MAX(m.MOVIE_GRADE) MOVIE_GRADE 
			 , MAX(m.MOVIE_LENGTH) MOVIE_LENGTH, MAX(m.MOVIE_MAINPIC_PATH) movie_mainpic_path
			 , MAX(m.OPENDATE) opendate, MAX(m.ENDDATE) enddate,  LISTAGG(mt.MOVIE_TYPE_DES, ',') WITHIN GROUP(ORDER BY mtc.MOVIE_TYPE_CD) movie_type_cd
		  FROM movie m, MOVIE_TYPE_C mtc, movie_type mt
		 WHERE m.MOVIE_CD = mtc.MOVIE_CD
		   AND mtc.MOVIE_TYPE_CD = mt.MOVIE_TYPE_CD
		   AND opendate <![CDATA[<=]]> #{date}
		   AND enddate <![CDATA[>=]]> #{date}
		 GROUP BY m.MOVIE_CD
	</select>
	
	<select id="selectScreenListforMovieMain" resultType="map">
		SELECT s.*, m.*
		  FROM screen s, house h, THEATER t, movie m
		 WHERE s.HOUSE_NO = h.HOUSE_NO
		   AND h.THR_NAME = t.THR_NAME
		   AND s.MOVIE_CD = m.MOVIE_CD 
		   AND s.STARTDATE <![CDATA[>=]]> TO_DATE(TO_CHAR(#{date}, 'yyyy-MM-dd')) + 7/24
		   AND s.startdate <![CDATA[<=]]> TO_DATE(TO_CHAR(#{date}, 'yyyy-MM-dd')) + 27/24
		   AND t.ADMIN_CD = #{admin_cd}
	</select>
	
	<select id="checkScreenTimeClash" resultType="int">
		SELECT COUNT(*)
		  FROM (
					SELECT s.*, (s.startdate + (m.MOVIE_LENGTH /1440)) prev_enddate
						 , NVL(LEAD(s.startdate) OVER(ORDER BY s.startdate), TO_TIMESTAMP(TO_CHAR(#{markTime}, 'mm-dd-yyyy') || ' 03:00:00.000', 'mm/dd/yyyy hh24:mi:ss.ff3') + 1) next_startdate
						 , NVL(LEAD(s.startdate + (m.MOVIE_LENGTH /1440)) OVER(ORDER BY s.startdate), TO_TIMESTAMP(TO_CHAR(#{markTime}, 'mm-dd-yyyy') || ' 03:00:00.000', 'mm/dd/yyyy hh24:mi:ss.ff3') + 1) next_enddate
					  FROM SCREEN s, MOVIE m 
					 WHERE s.MOVIE_CD = m.MOVIE_CD
					   AND s.HOUSE_NO = #{house_no}
					   AND TO_CHAR(s.startdate, 'yyyy-MM-dd') = TO_CHAR(#{markTime}, 'yyyy-MM-dd') 
					   <if test="screen_cd != null">
		   			   AND	S.SCREEN_CD != #{screen_cd}
		   			   </if>
		  		) f
		 WHERE 
		 		(
				f.prev_enddate <![CDATA[>=]]> #{startTime}
		 		AND 
		 		f.startdate <![CDATA[<=]]> #{endTime}
		 		)
		    OR  (
		   		f.next_startdate <![CDATA[<=]]> #{endTime}
		   		AND
		   		f.next_enddate <![CDATA[>=]]> #{startTime}
		   		)
		   	
	</select>
	
	<insert id="insertScreen">
		INSERT INTO screen
		 			(
		 			 screen_cd
		 			,house_no
		 			,movie_cd
		 			,startdate
		 			,gb_jojo
		 			,movie_type_cd
		 			)
		 	 VALUES (
		 	 		 #{movie_cd} || #{movie_type_cd} || TO_CHAR(#{startdate}, 'MMdd') || LPAD(#{house_no},4,0) || LPAD(screen_seq.nextval,4,0)
		 	 		,#{house_no}
		 	 		,#{movie_cd}
		 	 		,#{startdate}
		 	 		,#{gb_jojo}
		 	 		,#{movie_type_cd}
		 	 		)
	</insert>
	
	<select id="selectScreenByScreen_cd" resultType="map">
		SELECT s.SCREEN_CD, MAX(m.MOVIE_CD) MOVIE_CD, MAX(m.MOVIE_NAME) MOVIE_NAME, MAX(h.HOUSE_NAME) HOUSE_NAME
			 , MAX(m.MOVIE_LENGTH) MOVIE_LENGTH, MAX(s.STARTDATE) STARTDATE, MAX((s.STARTDATE + m.MOVIE_LENGTH / 1440)) enddate
			 , MAX(m.MOVIE_MAINPIC_PATH) MOVIE_MAINPIC_PATH, MAX(s.MOVIE_TYPE_CD) MOVIE_TYPE_CD, MAX(mt.MOVIE_TYPE_DES) MOVIE_TYPE_DES
			 , COUNT(r.res_no) reservcnt, MAX(h.HOUSE_ROW) house_row, MAX(h.HOUSE_COLUMN) house_column
			 , NVL(LISTAGG(r.RES_SEAT, '/') WITHIN GROUP (ORDER BY r.RES_SEAT), ' ')  seat_list
			 , LISTAGG(mtc.MOVIE_TYPE_CD, ',') WITHIN GROUP (ORDER BY mtc.MOVIE_TYPE_CD)  movie_type_list
			 , MAX(m.OPENDATE) MOVIE_OPENDATE, MAX(m.ENDDATE) MOVIE_ENDDATE, MAX(h.HOUSE_NO) HOUSE_NO
		  FROM SCREEN s, MOVIE m, HOUSE h, MOVIE_TYPE mt, RESERVATION r, MOVIE_TYPE_C mtc
		 WHERE s.MOVIE_CD = m.MOVIE_CD 
		   AND s.HOUSE_NO = h.HOUSE_NO 
		   AND s.MOVIE_TYPE_CD = mt.MOVIE_TYPE_CD
		   AND s.SCREEN_CD = r.SCREEN_CD (+)
		   AND mtc.MOVIE_CD = m.MOVIE_CD
		   AND s.screen_cd = #{screen_cd}
		  GROUP BY s.SCREEN_CD
	</select>
	
	<update id="updateScreen">
		UPDATE screen
		   SET house_no = #{house_no}
		      ,startdate = #{startdate}
		      ,gb_jojo = #{gb_jojo}
		      ,movie_type_cd = #{movie_type_cd}
		 WHERE screen_cd = #{screen_cd}
	</update>
	
	<delete id="deleteScreen">
		DELETE FROM screen WHERE screen_cd = #{screen_cd}
	</delete>
	
	<select id="selectNoticeForMain" resultType="notice">
		SELECT *
		  FROM (
		  		SELECT *
		  		  FROM notice
		  		 WHERE admin_cd = #{admin_cd}
		  		   AND gb_del = 'N'
		  		 ORDER BY notice_no DESC
		  		)
		 WHERE ROWNUM <![CDATA[<=]]> 5 		
	</select>
	
	<select id="selectQnaForMain" resultType="qna">
		SELECT *
		  FROM (
		  		SELECT q.*, a.ans_content
		  		  FROM question q, theater t, answer a
		  		 WHERE q.thr_name = t.thr_name 
		  		   AND q.que_no = a.que_no(+)
		  		   AND q.que_sel = 'T'
		  		   AND t.admin_cd = #{admin_cd}
		  		 ORDER BY q.que_no DESC
		  		)
		 WHERE ROWNUM <![CDATA[<=]]> 5
	</select>
	
	<select id="selectEventForMain" resultType="event">
		SELECT *
		  FROM (
		  		SELECT *
		  		  FROM event
		  		 WHERE relate_cd = #{admin_cd}
		  		   AND enddate <![CDATA[>=]]> SYSDATE
		   		   AND event_div = '극장'
		  		 ORDER BY regdate DESC
		  	    )
		 WHERE ROWNUM <![CDATA[<=]]> 4
	</select>
	
</mapper>