<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dw.dao.SysAdminDAO">

	<sql id="searchThr">
		<if test="searchType == 'n'.toString()">
			AND t.thr_name LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchType == 'l'.toString()">
			AND t.thr_loc LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchType == 'a'.toString()">
			AND t.thr_addr LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchType == 'i'.toString()">
			AND a.admin_id LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchType == 'p'.toString()">
			AND t.thr_tel LIKE '%' || #{keyword} || '%'
		</if>
		<if test="searchType == 'nlaip'.toString()">
			AND (
				t.thr_name LIKE '%' || #{keyword} || '%'
				OR
				t.thr_loc LIKE '%' || #{keyword} || '%'
				OR
				t.thr_addr LIKE '%' || #{keyword} || '%'
				OR
				a.admin_id LIKE '%' || #{keyword} || '%'
				OR
				t.thr_tel LIKE '%' || #{keyword} || '%'
				)
		</if>
	</sql>
	
	<sql id="searchMov">
 		<if test="keyword == 'f'.toString()"> 
	 		 <![CDATA[
				AND m.opendate > SYSDATE 
 			 ]]>  
 		</if>
		<if test="keyword == ''.toString()">
			<![CDATA[
				AND m.ENDDATE > SYSDATE 
 			 ]]> 
		</if>  
		<if test="searchType == 'r'.toString()">
			ORDER BY r.reserve DESC NULLS last
		</if>
		<if test="searchType == 'n'.toString()">
			ORDER BY m.movie_name ASC
		</if>
		<if test="searchType == 'd'.toString()">
			ORDER BY m.opendate ASC
		</if>
	</sql>
	
	<select id="selectSearchTheaterList" resultType="theater">
		SELECT t.*, a.admin_id, a.admin_pwd
		  FROM theater t, admin a
		 WHERE t.admin_cd = a.admin_cd
		 <include refid="searchThr" />
		 ORDER BY t.gb_del ASC, t.regdate DESC
	</select>
	
	<select id="selectSearchTheaterListCount" resultType="int">
		SELECT COUNT(*)
		  FROM theater t, admin a
		 WHERE t.admin_cd = a.admin_cd
		 <include refid="searchThr" />
	</select>
	
	<select id="selectLocList" resultType="str">
		SELECT thr_loc
		  FROM loc
	</select>
	
	<insert id="insertAdmin">
		INSERT INTO admin
					(
					 admin_cd
					,admin_id
					,admin_pwd
					,thr_name
					)
			 VALUES
					(
					 'T' || (SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') FROM dual) || LPAD(admin_seq.nextval,4,0)
					,#{admin_id}
					,#{admin_pwd}
					,#{thr_name}
					)
 		<selectKey resultType="str" keyProperty="admin_cd" order="AFTER">
			SELECT 'T' || (SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') FROM dual d1) || LPAD(admin_seq.currval,4,0) admin_cd FROM dual d2
		</selectKey>
	</insert>
	
	<update id="updateAdmin" parameterType="admin">
		UPDATE admin 
		   SET admin_id = #{admin_id}
		      ,admin_pwd = #{admin_pwd}
		 WHERE thr_name = #{thr_name}
	</update>
	
	<insert id="insertTheater" parameterType="theater">
		INSERT INTO theater
					(
					 thr_name
					,thr_info 
					,thr_loc
					,thr_addr 
					,thr_addr_detail
					,thr_addr_post
					,thr_tel
					,regdate
					,thr_x
					,thr_y
					,admin_cd
					,gb_del
					)
			 VALUES (
			 		 #{thr_name}
			 		,#{thr_info}
			 		,#{thr_loc}
			 		,#{thr_addr}
			 		,#{thr_addr_detail}
			 		,#{thr_addr_post}
			 		,#{thr_tel}
			 		,SYSDATE
			 		,#{thr_x}
			 		,#{thr_y}
			 		,#{admin_cd}
			 		,'N'
			 		)		
	</insert>
	
	<update id="updateTheater" parameterType="theater">
		UPDATE theater
		   SET thr_info = #{thr_info}
		      ,thr_loc = #{thr_loc}
		      ,thr_tel = #{thr_tel}
		      ,thr_addr_post = #{thr_addr_post}
		      ,thr_addr = #{thr_addr}
		      ,thr_addr_detail = #{thr_addr_detail}
		 WHERE thr_name = #{thr_name}
	</update>
	
	<update id="updateDelTheater" parameterType="str">
		UPDATE theater
		   SET gb_del = 'Y'
		 WHERE thr_name = #{thr_name}
	</update>
	
	<select id="selectTheaterByName" parameterType="str" resultType="theater">
		SELECT t.*, a.admin_id, a.admin_pwd
		  FROM theater t, admin a
		 WHERE t.thr_name = #{thr_name}
		   AND t.thr_name = a.thr_name
	</select>
	
	<select id="selectGenreList" resultType="genre">
		SELECT *
		  FROM genre
	</select>
	
	<select id="selectGradeList" resultType="str">
		SELECT *
		  FROM movie_grade
	</select>
	
	<insert id="insertMovie">
		INSERT INTO movie 
					(
					 movie_cd
					,movie_name
					,movie_mainpic_path
					,movie_director
					,movie_length
					,movie_info
					,movie_actor
					,movie_grade
					,opendate
					,enddate				
					) 
			 VALUES (
			 		 #{movie_cd} || (SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') FROM dual) || LPAD(movie_seq.nextval,4,0)
			 		,#{movie_name}
			 		,#{movie_mainpic_path}
					,#{movie_director}
					,#{movie_length}
					,#{movie_info}
					,#{movie_actor}
					,#{movie_grade}
					,#{opendate}
					,#{enddate}
			 		)
		<selectKey resultType="str" keyProperty="movie_cd" order="AFTER">
			SELECT #{movie_cd} || (SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') FROM dual d1) || LPAD(movie_seq.currval,4,0) movie_cd FROM dual d2
		</selectKey>
	</insert>
	
	<insert id="insertGenre_c">
		INSERT INTO genre_c
					(
					 genre_cd
					,movie_cd
					)
			 VALUES (
					 #{genre}
					,#{movie_cd}			 
			 		)	
	</insert>
	
	<insert id="insertMovieType_c">
		INSERT INTO movie_type_c
					(
					 movie_cd
					,movie_type_cd		
					)
			 VALUES (
			 		 #{movie_cd}
			 		,#{movie_type_cd}
			 		)		
	</insert>
	
	<insert id="insertMoviePic">
		INSERT INTO movie_picture
					(
					 movie_cd
					,movie_pic_no
					,movie_pic_path
					)
			 VALUES	(
			 		 #{movie_cd}
			 		,MOVIE_PIC_SEQ.nextval
			 		,#{movie_pic_path}
					)
	</insert>
	
	<insert id="insertMoviePre">
		INSERT INTO movie_preview
					(
					 movie_cd
					,movie_pre_no
					,movie_pre_path
					)
			 VALUES	(
			 		 #{movie_cd}
			 		,MOVIE_preview_SEQ.nextval
			 		,#{movie_pre_path}
					)
	</insert>
	
	<select id="selectSearchMovieList" resultType="Map">
		SELECT m.*, nvl(reserve,0)
		FROM movie m, (
			SELECT m.movie_cd, count(*) reserve
			FROM movie m, screen s, reservation r
			WHERE 1=1
			AND m.movie_cd = s.movie_cd(+)
			AND s.screen_cd = r.screen_cd(+)
			AND TO_CHAR(resdate, 'YYYYMMDD') = TO_CHAR(sysdate-1,'YYYYMMDD')
			GROUP BY m.movie_cd
			) r
		WHERE m.movie_cd = r.movie_cd(+)
		 <include refid="searchMov" />
	</select>
	
	<select id="selectSearchMovieListCount" resultType="int">
		SELECT count(*)
		FROM movie m, (
			SELECT m.movie_cd, count(*) reserve
			FROM movie m, screen s, reservation r
			WHERE 1=1
			AND m.movie_cd = s.movie_cd(+)
			AND s.screen_cd = r.screen_cd(+)
			AND TO_CHAR(resdate, 'YYYYMMDD') = TO_CHAR(sysdate-1,'YYYYMMDD')
			GROUP BY m.movie_cd
			) r
		WHERE m.movie_cd = r.movie_cd(+)
		 <include refid="searchMov" />
	</select>
	
	<select id="selectReservRatio" resultType="double">
		SELECT round((SELECT COUNT(*) 
  		  			   				 FROM movie m1, reservation r1, screen s1 
 					 				WHERE s1.movie_cd = #{movie_cd}
 					 				  AND m1.movie_cd = s1.movie_cd
 		   							  AND s1.screen_cd = r1.screen_cd 
		  							  AND TO_CHAR(r1.resdate, 'YYYYMMDD')  = TO_CHAR(sysdate-1,'YYYYMMDD'))
			       				 / 
			       				(SELECT DECODE((SELECT count(*) FROM RESERVATION r WHERE TO_CHAR(resdate, 'YYYYMMDD')  = TO_CHAR(sysdate-1,'YYYYMMDD')), 0, 1, (SELECT count(*) FROM RESERVATION r WHERE TO_CHAR(resdate, 'YYYYMMDD')  = TO_CHAR(sysdate-1,'YYYYMMDD'))) FROM DUAL)
		       				, 2) * 100 reserveRatio
 					   FROM dual
	</select> 
	
	<select id="selectMovieByMovie_cd" resultType="Map">
		SELECT *
		  FROM movie m
		 WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectGenreByMovie_cd" resultType="List">
		SELECT genre_cd
		  FROM genre_c
		 WHERE movie_cd = #{movie_cd}
	</select>
</mapper>