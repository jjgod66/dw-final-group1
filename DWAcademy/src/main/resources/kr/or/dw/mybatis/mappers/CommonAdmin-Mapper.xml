<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dw.dao.CommonAdminDAO">
	
	<sql id="searchMovieStatistics">
		<if test="searchType2 == ''.toString()">
			AND to_char(resdate, 'yyyy-MM-dd') = to_char(SYSDATE - 1, 'yyyy-MM-dd')
		</if>
		<if test="searchType2 == 'day'.toString()">
			AND to_char(resdate, 'yyyy-MM-dd') = #{keyword}
		</if>
		<if test="searchType2 == 'week'.toString()">
			AND to_char(resdate, 'yyyy-MM-dd') <![CDATA[<]]> to_char(TRUNC(TO_DATE(#{keyword})+7, 'dy'), 'yyyy-MM-dd')
			AND to_char(resdate, 'yyyy-MM-dd') <![CDATA[>=]]> to_char(TRUNC(TO_DATE(#{keyword}), 'dy'), 'yyyy-MM-dd')
		</if>
		<if test="searchType2 == 'month'.toString()">
			AND to_char(resdate, 'yyyy-MM') = TO_CHAR(TO_DATE(#{keyword}), 'yyyy-MM')
		</if>
	</sql>
	
	<sql id="searchMovieStatistics2">
		<if test="searchType != 'S202307200022'.toString() and searchType != ''.toString()">
			AND t.admin_cd = #{searchType}
		</if>
	</sql>
		
	<select id="selectThrList" resultType="map">
		SELECT a.admin_cd, a.thr_name
		  FROM admin a, theater t
		 WHERE a.admin_cd = t.admin_cd(+)
		   and a.admin_cd != '${admin_cd}'
		 ORDER BY a.ADMIN_CD
	</select>
	
	<insert id="insertNote">
		INSERT INTO admin_note
					(
					 note_no
					,note_sender
					,note_receiver
					,note_title
					,note_content
					,senddate
					,gb_del_sender
					,gb_del_receiver
					,gb_read
					)
			 VALUES (
			 		 note_seq.nextval
			 		,#{note_sender}
			 		,#{note_receiver}
			 		,#{note_title}
			 		,#{note_content}
			 		,SYSDATE
			 		,'N'
			 		,'N'
			 		,'N'
			 		)
	</insert>
	
	<select id="selectReceivedNoteListCount" resultType="int">
		SELECT COUNT(*)
		  FROM admin_note
		 WHERE note_receiver = #{admin_cd}
		   AND gb_del_receiver = 'N'
	</select>
	
	<select id="selectReceivedNoteList" resultType="map">
		SELECT * 
		  FROM (
				SELECT * 
				  FROM (
						SELECT *
						  FROM (
								SELECT an.*, NVL(t.thr_name, 'DW시네마') thr_name
								  FROM admin_note an, theater t
								 WHERE note_receiver = #{admin_cd}
								   AND an.note_sender = t.admin_cd(+)
								   AND gb_del_receiver = 'N'
								 ORDER BY an.note_no DESC
						  		)
				  		 WHERE ROWNUM <![CDATA[<=]]> #{perPageNum} * #{page}
				  		 ORDER BY NOTE_NO ASC
						)
				)
		<if test="totalCount lt perPageNum * page">
		  WHERE ROWNUM <![CDATA[<=]]> #{totalCount} - (#{page} - 1) * #{perPageNum}
		</if>
		<if test="totalCount gte perPageNum * page">
		  WHERE ROWNUM <![CDATA[<=]]> #{perPageNum}
		</if>
		  ORDER BY NOTE_NO DESC
	</select>
	
	<select id="selectSendedNoteListCount" resultType="int">
		SELECT COUNT(*)
		  FROM admin_note
		 WHERE note_sender = #{admin_cd}
		   AND gb_del_sender = 'N'
	</select>
	
	<select id="selectSendedNoteList" resultType="map">
		SELECT * 
		  FROM (
				SELECT * 
				  FROM (
						SELECT *
						  FROM (
								SELECT an.*, NVL(t.thr_name, 'DW시네마') thr_name
								  FROM admin_note an, theater t
								 WHERE note_sender = #{admin_cd}
								   AND an.note_receiver = t.admin_cd(+)
								   AND gb_del_sender = 'N'
								 ORDER BY an.note_no DESC
						  		)
				  		 WHERE ROWNUM <![CDATA[<=]]> #{perPageNum} * #{page}
				  		 ORDER BY NOTE_NO ASC
						)
				)
		<if test="totalCount lt perPageNum * page">
		  WHERE ROWNUM <![CDATA[<=]]> #{totalCount} - (#{page} - 1) * #{perPageNum}
		</if>
		<if test="totalCount gte perPageNum * page">
		  WHERE ROWNUM <![CDATA[<=]]> #{perPageNum}
		</if>
		  ORDER BY NOTE_NO DESC
	</select>
	
	<select id="selectNoteByNote_no" resultType="map">
		SELECT an.*, NVL(t.thr_name, 'DW시네마') thr_name
		   <if test="note_type == 'R'.toString()">
		   , (SELECT COUNT(*) 
		   		FROM ADMIN_NOTE an2 
		   	   WHERE NOTE_RECEIVER = (SELECT NOTE_RECEIVER 
		   	   							FROM ADMIN_NOTE an 
		   	   						   WHERE NOTE_NO=#{note_no} 
		   	   						  )
		   	     AND GB_READ = 'N'
		   	     AND GB_DEL_RECEIVER = 'N') UNREADEDCNT
		   </if>
		  FROM admin_note an, theater t
		 WHERE note_no = #{note_no}
		   <if test="note_type == 'S'.toString()">
		   AND an.note_receiver = t.admin_cd(+)
		   </if>
		   <if test="note_type == 'R'.toString()">
		   AND an.note_sender = t.admin_cd(+)
		   </if>
	</select>
	
	<update id="deleteNote">
		UPDATE admin_note
		<if test="note_type =='S'.toString()">
		   SET gb_del_sender = 'Y'
		</if>
		<if test="note_type =='R'.toString()">
		   SET gb_del_receiver = 'Y'
		</if>
		 WHERE note_no = #{note_no}
	</update>
	
	<update id="updateGb_read">
		UPDATE admin_note
		   SET gb_read = 'Y'
		 WHERE note_no = #{note_no}
	</update>
	
	<select id="selectUnreadedNoteCnt" resultType="int">
		SELECT NVL(COUNT(*), 0) notecnt
		  FROM admin_note
		 WHERE note_receiver = #{admin_cd}
		   AND gb_read = 'N'
		   AND gb_del_receiver = 'N'
	</select>
	
	<select id="selectStatisticsMovieList" resultType="map">
		SELECT movie_name, opendate
			 , nvl(yessales,0) sales_day, nvl(yesPer,0) seat_day
			 , nvl(allsales,0) sales_allday, nvl(allPer,0) seat_allday
			 , nvl(allScreen,0) screencnt, nvl(yesAllsales,0) sales_day_all
			 , ROUND((nvl(yessales,0) / DECODE(nvl(yesAllsales,0), 0, 1, nvl(yesAllsales,0))) , 4) * 100 sales_day_ratio
		  FROM movie m,
		      (
		      	SELECT movie_cd, count(*) allScreen
		      	  FROM screen s, theater t, house h
		      	 WHERE s.house_no = h.house_no
		      	   AND t.thr_name = h.thr_name
		        <include refid="searchMovieStatistics2"/>
			     GROUP BY movie_cd
			  ) a,
		      (
		    	 SELECT sum(b1.allsales) allsales, b1.movie_cd movie_cd, sum(b1.allPer) allPer			
				   FROM (SELECT max(pricesum) allsales, max(movie_cd) movie_cd, count(*) allPer
				   FROM reservation r, screen s, theater t, house h
				  WHERE r.screen_cd = s.screen_cd
				    AND s.house_no = h.house_no
				    AND t.thr_name = h.thr_name
				    AND r.resdate  <![CDATA[<]]>  SYSDATE
		        <include refid="searchMovieStatistics2"/>
				    AND r.GB_CANCEL = 'N'
				  GROUP BY MERCHANT_UID ) b1
				  GROUP BY b1.movie_cd
		      ) b,
		      (
				SELECT sum(c1.yessales) yessales, c1.movie_cd movie_cd, sum(c1.yesPer) yesPer  
				  FROM (
				  		SELECT max(pricesum) yessales, MAX(movie_cd) movie_cd, count(*) yesPer
						  FROM reservation r, screen s, theater t, house h
						 WHERE r.screen_cd = s.screen_cd
						   AND s.house_no = h.house_no
						   AND t.thr_name = h.thr_name
						   AND r.GB_CANCEL = 'N'
		        <include refid="searchMovieStatistics2"/>
	      	    <include refid="searchMovieStatistics"/>
						GROUP BY r.MERCHANT_UID
						) c1
				GROUP BY c1.movie_cd
		      ) c,
		      (
		      	SELECT sum(MAX(pricesum)) yesAllsales
				  FROM reservation r, screen s, theater t, house h
				 WHERE r.screen_cd = s.screen_cd
				   AND s.house_no = h.house_no
				   AND t.thr_name = h.thr_name
				   AND r.resdate  <![CDATA[<]]>  SYSDATE
				   AND r.GB_CANCEL = 'N'
			    <include refid="searchMovieStatistics2"/>
		      	<include refid="searchMovieStatistics"/>  	  
				 GROUP BY MERCHANT_UID 
			  ) d
		 WHERE m.movie_cd = a.movie_cd(+)
		   AND m.movie_cd = b.movie_cd(+)
		   AND m.movie_cd = c.movie_cd(+)
		   AND to_char(m.enddate, 'yyyyMMdd')  <![CDATA[>=]]>  to_char(sysdate, 'yyyyMMdd')
		 ORDER BY sales_day DESC, sales_allday DESC
	</select>
	
	<select id="selectStatisticsMovieListCount" resultType="int">
		SELECT COUNT(*)
		  FROM (
				SELECT movie_name, opendate
					 , nvl(yessales,0) sales_day, nvl(yesPer,0) seat_day
					 , nvl(allsales,0) sales_allday, nvl(allPer,0) seat_allday
					 , nvl(allScreen,0) screencnt, nvl(yesAllsales,0) sales_day_all
					 , ROUND((nvl(yessales,0) / DECODE(nvl(yesAllsales,0), 0, 1, nvl(yesAllsales,0))) , 4) * 100 sales_day_ratio
				  FROM movie m,
				      (
				      	SELECT movie_cd, count(*) allScreen
				      	  FROM screen s, theater t, house h
				      	 WHERE s.house_no = h.house_no
				      	   AND t.thr_name = h.thr_name
				        <include refid="searchMovieStatistics2"/>
					     GROUP BY movie_cd
					  ) a,
				      (
				      	SELECT sum(pricesum) allsales, movie_cd, count(*) allPer
				      	  FROM reservation r, screen s, theater t, house h
				      	 WHERE r.screen_cd = s.screen_cd
				      	   AND s.house_no = h.house_no
				      	   AND t.thr_name = h.thr_name
				      	   AND r.resdate  <![CDATA[<]]>  SYSDATE
				           AND r.GB_CANCEL = 'N'
				        <include refid="searchMovieStatistics2"/>
				    	 GROUP BY movie_cd
				      ) b,
				      (
				      	SELECT sum(pricesum) yessales, movie_cd, count(*) yesPer
				      	  FROM reservation r, screen s, theater t, house h
				     	 WHERE r.screen_cd = s.screen_cd
				     	   AND s.house_no = h.house_no
				     	   AND t.thr_name = h.thr_name
				           AND r.GB_CANCEL = 'N'
				        <include refid="searchMovieStatistics2"/>
			      	    <include refid="searchMovieStatistics"/>
				        GROUP BY movie_cd
				      ) c,
				      (
				      	SELECT sum(pricesum) yesAllsales
				      	  FROM reservation r, screen s, theater t, house h
				      	 WHERE r.screen_cd = s.screen_cd
				      	   AND s.house_no = h.house_no
				      	   AND t.thr_name = h.thr_name
				      	   AND r.resdate  <![CDATA[<]]>  SYSDATE
					       AND r.GB_CANCEL = 'N'
					    <include refid="searchMovieStatistics2"/>
				      	<include refid="searchMovieStatistics"/>  	  
					  ) d
				 WHERE m.movie_cd = a.movie_cd(+)
				   AND m.movie_cd = b.movie_cd(+)
				   AND m.movie_cd = c.movie_cd(+)
				   AND to_char(m.enddate, 'yyyyMMdd')  <![CDATA[>=]]>  to_char(sysdate, 'yyyyMMdd')
				 ORDER BY sales_day DESC, sales_allday DESC
		 		)
	</select>
	
	<select id="selectBySearchMovieName" resultType="map">
		SELECT MOVIE_CD, MOVIE_NAME 
  		  FROM MOVIE
  		 WHERE MOVIE_NAME LIKE '%' || #{searchText} || '%'
	</select>
	
	<select id="selectStatisticsMovieByMovieName_day" resultType="map">
		SELECT NVL(a1.seatcnt, 0) seatcnt
			 , NVL(b1.sales_allmovie, 0) sales_allmovie, NVL(c1.sales_movie, 0) sales_movie
		     , ROUND(NVL(c1.sales_movie, 0) / DECODE(NVL(b1.sales_allmovie, 0),0, 1, NVL(b1.sales_allmovie, 0)), 4) * 100 sales_movie_ratio
 			 , NVL(d1.screencnt, 0) screencnt, cal.dt dates
		  FROM (
				SELECT COUNT(*) seatcnt, TO_CHAR(RESDATE, 'yyyy-MM-dd') resdate
				  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
				 WHERE 1=1
				   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
				   AND s.MOVIE_CD = m.MOVIE_CD
				   AND r.SCREEN_CD = s.SCREEN_CD 
				   AND h.house_no = s.house_no
				   AND t.thr_name = h.thr_name
				 	<include refid="searchMovieStatistics2" />
				   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM-dd')
				) a1,
			   (
				SELECT SUM(pricesum) sales_allmovie, resdate
		  		  FROM (
						SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM-dd') resdate
		 		  		  FROM RESERVATION r, house h, theater t, SCREEN s
						 WHERE 1=1
						   AND r.SCREEN_CD = s.SCREEN_CD
						   AND s.HOUSE_NO = h.HOUSE_NO
						   AND h.THR_NAME = t.THR_NAME
						   <include refid="searchMovieStatistics2" />
						   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
		 			     GROUP BY TO_CHAR(RESDATE, 'yyyy-MM-dd'), RES_NO 
				  		) a
				 GROUP BY a.resdate
			   ) b1,
			   (
				SELECT SUM(pricesum) sales_movie, resdate
				  FROM (
						SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM-dd') resdate
				 		  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
						 WHERE 1=1
						   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
						   AND r.SCREEN_CD = s.SCREEN_CD 
						   AND s.MOVIE_CD = m.MOVIE_CD 
						   AND s.HOUSE_NO = h.HOUSE_NO
						   AND h.THR_NAME = t.THR_NAME
						   <include refid="searchMovieStatistics2" />
						   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				 		 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM-dd'), RES_NO 
						  ) a
				GROUP BY a.resdate
			   ) c1,
		  	   (
				SELECT count(s.SCREEN_CD) screencnt, TO_CHAR(s.STARTDATE, 'yyyy-MM-dd') startdate
				  FROM screen s, MOVIE m, house h, theater t
				  WHERE 1=1
				    AND s.STARTDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
				    AND s.MOVIE_CD = m.MOVIE_CD 
				    AND h.house_no = s.house_no
				    AND h.thr_name = t.thr_name
				    <include refid="searchMovieStatistics2" />
				    AND s.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				  GROUP BY TO_CHAR(s.STARTDATE, 'yyyy-MM-dd')
			   ) d1,
		  	   (
		  		SELECT TO_CHAR(TRUNC(SYSDATE, 'dy') + LEVEL - 1, 'yyyy-MM-dd') AS dt
		      	  FROM dual 
		        CONNECT BY LEVEL <![CDATA[<=]]> ((TRUNC(SYSDATE, 'dy') + 6) - TRUNC(SYSDATE, 'dy') + 1)
		      )cal
		 WHERE cal.dt = a1.resdate(+)
		   AND cal.dt = b1.resdate(+)
		   AND cal.dt = c1.resdate(+)
		   AND cal.dt = d1.startdate(+)
		  ORDER BY cal.dt
	</select>
	
	<select id="selectStatisticsMovieByMovieNameCount_day" resultType="int">
		SELECT COUNT(*)
		  FROM (
		  		SELECT NVL(a1.seatcnt, 0) seatcnt
					 , NVL(b1.sales_allmovie, 0) sales_allmovie, NVL(c1.sales_movie, 0) sales_movie
				     , ROUND(NVL(c1.sales_movie, 0) / DECODE(NVL(b1.sales_allmovie, 0),0, 1, NVL(b1.sales_allmovie, 0)), 4) * 100 sales_movie_ratio
		 			 , NVL(d1.screencnt, 0) screencnt, cal.dt dates
				  FROM (
						SELECT COUNT(*) seatcnt, TO_CHAR(RESDATE, 'yyyy-MM-dd') resdate
						  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
						 WHERE 1=1
						   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
						   AND s.MOVIE_CD = m.MOVIE_CD
						   AND r.SCREEN_CD = s.SCREEN_CD 
						   AND h.house_no = s.house_no
						   AND t.thr_name = h.thr_name
						 	<include refid="searchMovieStatistics2" />
						   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
						 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM-dd')
						) a1,
					   (
						SELECT SUM(pricesum) sales_allmovie, resdate
				  		  FROM (
								SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM-dd') resdate
				 		  		  FROM RESERVATION r, house h, theater t, SCREEN s
								 WHERE 1=1
								   AND r.SCREEN_CD = s.SCREEN_CD
								   AND s.HOUSE_NO = h.HOUSE_NO
								   AND h.THR_NAME = t.THR_NAME
								   <include refid="searchMovieStatistics2" />
								   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
				 			     GROUP BY TO_CHAR(RESDATE, 'yyyy-MM-dd'), RES_NO 
						  		) a
						 GROUP BY a.resdate
					   ) b1,
					   (
						SELECT SUM(pricesum) sales_movie, resdate
						  FROM (
								SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM-dd') resdate
						 		  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
								 WHERE 1=1
								   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
								   AND r.SCREEN_CD = s.SCREEN_CD 
								   AND s.MOVIE_CD = m.MOVIE_CD 
								   AND s.HOUSE_NO = h.HOUSE_NO
								   AND h.THR_NAME = t.THR_NAME
								   <include refid="searchMovieStatistics2" />
								   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
						 		 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM-dd'), RES_NO 
								  ) a
						GROUP BY a.resdate
					   ) c1,
				  	   (
						SELECT count(s.SCREEN_CD) screencnt, TO_CHAR(s.STARTDATE, 'yyyy-MM-dd') startdate
						  FROM screen s, MOVIE m, house h, theater t
						  WHERE 1=1
						    AND s.STARTDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
						    AND s.MOVIE_CD = m.MOVIE_CD 
						    AND h.house_no = s.house_no
						    AND h.thr_name = t.thr_name
						    <include refid="searchMovieStatistics2" />
						    AND s.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
						  GROUP BY TO_CHAR(s.STARTDATE, 'yyyy-MM-dd')
					   ) d1,
				  	   (
				  		SELECT TO_CHAR(TRUNC(SYSDATE, 'dy') + LEVEL - 1, 'yyyy-MM-dd') AS dt
				      	  FROM dual 
				        CONNECT BY LEVEL <![CDATA[<=]]> ((TRUNC(SYSDATE, 'dy') + 6) - TRUNC(SYSDATE, 'dy') + 1)
				      )cal
				 WHERE cal.dt = a1.resdate(+)
				   AND cal.dt = b1.resdate(+)
				   AND cal.dt = c1.resdate(+)
				   AND cal.dt = d1.startdate(+)
				  ORDER BY cal.dt
		  	)
	</select>
	
	<select id="selectStatisticsMovieByMovieName_month" resultType="map">
		SELECT NVL(a1.seatcnt, 0) seatcnt
			 , NVL(b1.sales_allmovie, 0) sales_allmovie, NVL(c1.sales_movie, 0) sales_movie
		     , ROUND(NVL(c1.sales_movie, 0) / DECODE(NVL(b1.sales_allmovie, 0),0, 1, NVL(b1.sales_allmovie, 0)), 4) * 100 sales_movie_ratio
			 , NVL(d1.screencnt, 0) screencnt, cal.dt dates
		  FROM (
				SELECT COUNT(*) seatcnt, TO_CHAR(RESDATE, 'yyyy-MM') resdate
				  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t 
				 WHERE 1=1
				   AND RESDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
				   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
				   AND s.MOVIE_CD = m.MOVIE_CD
				   AND r.SCREEN_CD = s.SCREEN_CD 
				   AND h.house_no = s.house_no
				   AND t.thr_name = h.thr_name
				 	<include refid="searchMovieStatistics2" />
				   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM')
				) a1,
			   (
				SELECT SUM(pricesum) sales_allmovie, resdate
		  		  FROM (
						SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM') resdate
		 		  		  FROM RESERVATION r, house h, theater t, SCREEN s
						 WHERE 1=1
						   AND r.SCREEN_CD = s.SCREEN_CD
						   AND s.HOUSE_NO = h.HOUSE_NO
						   AND h.THR_NAME = t.THR_NAME
						   <include refid="searchMovieStatistics2" />
						   AND RESDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
		 			     GROUP BY TO_CHAR(RESDATE, 'yyyy-MM'), RES_NO 
				  		) a
				 GROUP BY a.resdate
			   ) b1,
			   (
				SELECT SUM(pricesum) sales_movie, resdate
				  FROM (
						SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM') resdate
				 		  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
						 WHERE 1=1
						   AND RESDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
						   AND r.SCREEN_CD = s.SCREEN_CD 
						   AND s.MOVIE_CD = m.MOVIE_CD 
						   AND s.HOUSE_NO = h.HOUSE_NO
						   AND h.THR_NAME = t.THR_NAME
						   <include refid="searchMovieStatistics2" />
						   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				 		 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM'), RES_NO 
						  ) a
				GROUP BY a.resdate
			   ) c1,
		  	   (
				SELECT count(s.SCREEN_CD) screencnt, TO_CHAR(s.STARTDATE, 'yyyy-MM') startdate
				  FROM screen s, MOVIE m, house h, theater t 
				  WHERE 1=1
				    AND s.STARTDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
		 			AND s.MOVIE_CD = m.MOVIE_CD
		 			AND s.MOVIE_CD = m.MOVIE_CD 
				    AND h.house_no = s.house_no
				    AND h.thr_name = t.thr_name
				    <include refid="searchMovieStatistics2" />
				    AND s.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				  GROUP BY TO_CHAR(s.STARTDATE, 'yyyy-MM')
			   ) d1,
		  	   (
		  		SELECT TO_CHAR(ADD_MONTHS(TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM'),(LEVEL - 1)), 'yyyy-MM') AS dt
				  FROM DUAL
				CONNECT BY ADD_MONTHS(TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM'),(LEVEL - 1)) <![CDATA[<=]]> ADD_MONTHS(TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM'),+11)
		      )cal
		 WHERE cal.dt = a1.resdate(+)
		   AND cal.dt = b1.resdate(+)
		   AND cal.dt = c1.resdate(+)
		   AND cal.dt = d1.startdate(+)
		  ORDER BY cal.dt
	</select>
	
	<select id="selectStatisticsMovieByMovieNameCount_month" resultType="int">
		SELECT COUNT(*)
		  FROM (
		  			SELECT NVL(a1.seatcnt, 0) seatcnt
						 , NVL(b1.sales_allmovie, 0) sales_allmovie, NVL(c1.sales_movie, 0) sales_movie
					     , ROUND(NVL(c1.sales_movie, 0) / DECODE(NVL(b1.sales_allmovie, 0),0, 1, NVL(b1.sales_allmovie, 0)), 4) * 100 sales_movie_ratio
						 , NVL(d1.screencnt, 0) screencnt, cal.dt dates
					  FROM (
							SELECT COUNT(*) seatcnt, TO_CHAR(RESDATE, 'yyyy-MM') resdate
							  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t 
							 WHERE 1=1
							   AND RESDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
							   AND RESDATE BETWEEN TRUNC(TO_DATE(#{keyword}), 'dy') AND TRUNC(TO_DATE(#{keyword}), 'dy') + 7
							   AND s.MOVIE_CD = m.MOVIE_CD
							   AND r.SCREEN_CD = s.SCREEN_CD 
							   AND h.house_no = s.house_no
							   AND t.thr_name = h.thr_name
							 	<include refid="searchMovieStatistics2" />
							   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
							 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM')
							) a1,
						   (
							SELECT SUM(pricesum) sales_allmovie, resdate
					  		  FROM (
									SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM') resdate
					 		  		  FROM RESERVATION r, house h, theater t, SCREEN s
									 WHERE 1=1
									   AND r.SCREEN_CD = s.SCREEN_CD
									   AND s.HOUSE_NO = h.HOUSE_NO
									   AND h.THR_NAME = t.THR_NAME
									   <include refid="searchMovieStatistics2" />
									   AND RESDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
					 			     GROUP BY TO_CHAR(RESDATE, 'yyyy-MM'), RES_NO 
							  		) a
							 GROUP BY a.resdate
						   ) b1,
						   (
							SELECT SUM(pricesum) sales_movie, resdate
							  FROM (
									SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'yyyy-MM') resdate
							 		  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
									 WHERE 1=1
									   AND RESDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
									   AND r.SCREEN_CD = s.SCREEN_CD 
									   AND s.MOVIE_CD = m.MOVIE_CD 
									   AND s.HOUSE_NO = h.HOUSE_NO
									   AND h.THR_NAME = t.THR_NAME
									   <include refid="searchMovieStatistics2" />
									   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
							 		 GROUP BY TO_CHAR(RESDATE, 'yyyy-MM'), RES_NO 
									  ) a
							GROUP BY a.resdate
						   ) c1,
					  	   (
							SELECT count(s.SCREEN_CD) screencnt, TO_CHAR(s.STARTDATE, 'yyyy-MM') startdate
							  FROM screen s, MOVIE m, house h, theater t 
							  WHERE 1=1
							    AND s.STARTDATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM') AND TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '12', 'YYYYMM')
					 			AND s.MOVIE_CD = m.MOVIE_CD
					 			AND s.MOVIE_CD = m.MOVIE_CD 
							    AND h.house_no = s.house_no
							    AND h.thr_name = t.thr_name
							    <include refid="searchMovieStatistics2" />
							    AND s.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
							  GROUP BY TO_CHAR(s.STARTDATE, 'yyyy-MM')
						   ) d1,
					  	   (
					  		SELECT TO_CHAR(ADD_MONTHS(TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM'),(LEVEL - 1)), 'yyyy-MM') AS dt
							  FROM DUAL
							CONNECT BY ADD_MONTHS(TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM'),(LEVEL - 1)) <![CDATA[<=]]> ADD_MONTHS(TO_DATE(TO_CHAR(TO_DATE(#{keyword}), 'yyyy') || '01', 'YYYYMM'),+11)
					      )cal
					 WHERE cal.dt = a1.resdate(+)
					   AND cal.dt = b1.resdate(+)
					   AND cal.dt = c1.resdate(+)
					   AND cal.dt = d1.startdate(+)
					  ORDER BY cal.dt
		  	   )
	</select>
	
	<select id="selectStatisticsMovieByMovieName_week" resultType="map">
		SELECT NVL(a1.seatcnt, 0) seatcnt
			 , NVL(b1.sales_allmovie, 0) sales_allmovie, NVL(c1.sales_movie, 0) sales_movie
		     , ROUND(NVL(c1.sales_movie, 0) / DECODE(NVL(b1.sales_allmovie, 0),0, 1, NVL(b1.sales_allmovie, 0)), 4) * 100 sales_movie_ratio
			 , NVL(d1.screencnt, 0) screencnt, TO_CHAR(TO_DATE(#{keyword}),'yyyy-MM') || ' ' || cal.dt || '주차' dates
		  FROM (
				SELECT COUNT(*) seatcnt, TO_CHAR(RESDATE, 'W') resdate
				  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t 
				 WHERE 1=1
				   AND RESDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
				   AND s.MOVIE_CD = m.MOVIE_CD
				   AND r.SCREEN_CD = s.SCREEN_CD 
				   AND h.house_no = s.house_no
				   AND t.thr_name = h.thr_name
				 	<include refid="searchMovieStatistics2" /> 
				   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				 GROUP BY TO_CHAR(RESDATE, 'W')
				) a1,
			   (
				SELECT SUM(pricesum) sales_allmovie, resdate
		  		  FROM (
						SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'W') resdate
		 		  		  FROM RESERVATION r, house h, theater t, SCREEN s
						 WHERE 1=1
						   AND r.SCREEN_CD = s.SCREEN_CD
						   AND s.HOUSE_NO = h.HOUSE_NO
						   AND h.THR_NAME = t.THR_NAME
						   <include refid="searchMovieStatistics2" />
						   AND RESDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
		 			     GROUP BY TO_CHAR(RESDATE, 'W'), RES_NO 
				  		) a
				 GROUP BY a.resdate
			   ) b1,
			   (
				SELECT SUM(pricesum) sales_movie, resdate
				  FROM (
						SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'W') resdate
				 		  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
						 WHERE 1=1
						   AND RESDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
						   AND r.SCREEN_CD = s.SCREEN_CD 
						   AND s.MOVIE_CD = m.MOVIE_CD 
						   AND s.HOUSE_NO = h.HOUSE_NO
						   AND h.THR_NAME = t.THR_NAME
						   <include refid="searchMovieStatistics2" />
						   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				 		 GROUP BY TO_CHAR(RESDATE, 'W'), RES_NO 
						  ) a
				GROUP BY a.resdate
			   ) c1,
		  	   (
				SELECT count(s.SCREEN_CD) screencnt, TO_CHAR(s.STARTDATE, 'W') startdate
				  FROM screen s, MOVIE m, house h, theater t 
				  WHERE 1=1
				    AND s.STARTDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
		 			AND s.MOVIE_CD = m.MOVIE_CD 
				    AND h.house_no = s.house_no
				    AND h.thr_name = t.thr_name
				    <include refid="searchMovieStatistics2" />
				   AND s.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
				  GROUP BY TO_CHAR(s.STARTDATE, 'W')
				  ORDER BY TO_CHAR(s.STARTDATE, 'W') ASC
			   ) d1,
		  	   (
		  		SELECT LEVEL AS dt
				  FROM dual 
				CONNECT BY LEVEL <![CDATA[<=]]> ((TO_CHAR(LAST_DAY(TO_DATE(#{keyword})), 'W') - TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'W') + 1) - (TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'W') - TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'W') + 1) + 1)
		      )cal
		 WHERE cal.dt = a1.resdate(+)
		   AND cal.dt = b1.resdate(+)
		   AND cal.dt = c1.resdate(+)
		   AND cal.dt = d1.startdate(+)
		  ORDER BY cal.dt
	</select>
	
	<select id="selectStatisticsMovieByMovieNameCount_week" resultType="int">
		SELECT COUNT(*)
		  FROM (
		  			SELECT NVL(a1.seatcnt, 0) seatcnt
						 , NVL(b1.sales_allmovie, 0) sales_allmovie, NVL(c1.sales_movie, 0) sales_movie
					     , ROUND(NVL(c1.sales_movie, 0) / DECODE(NVL(b1.sales_allmovie, 0),0, 1, NVL(b1.sales_allmovie, 0)), 4) * 100 sales_movie_ratio
						 , NVL(d1.screencnt, 0) screencnt, TO_CHAR(TO_DATE(#{keyword}),'yyyy-MM') || ' ' || cal.dt || '주차' dates
					  FROM (
							SELECT COUNT(*) seatcnt, TO_CHAR(RESDATE, 'W') resdate
							  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t 
							 WHERE 1=1
							   AND RESDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
							   AND s.MOVIE_CD = m.MOVIE_CD
							   AND r.SCREEN_CD = s.SCREEN_CD 
							   AND h.house_no = s.house_no
							   AND t.thr_name = h.thr_name
							 	<include refid="searchMovieStatistics2" /> 
							   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
							 GROUP BY TO_CHAR(RESDATE, 'W')
							) a1,
						   (
							SELECT SUM(pricesum) sales_allmovie, resdate
					  		  FROM (
									SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'W') resdate
					 		  		  FROM RESERVATION r, house h, theater t, SCREEN s
									 WHERE 1=1
									   AND r.SCREEN_CD = s.SCREEN_CD
									   AND s.HOUSE_NO = h.HOUSE_NO
									   AND h.THR_NAME = t.THR_NAME
									   <include refid="searchMovieStatistics2" />
									   AND RESDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
					 			     GROUP BY TO_CHAR(RESDATE, 'W'), RES_NO 
							  		) a
							 GROUP BY a.resdate
						   ) b1,
						   (
							SELECT SUM(pricesum) sales_movie, resdate
							  FROM (
									SELECT DISTINCT max(MERCHANT_UID), sum(PRICESUM) pricesum, TO_CHAR(RESDATE, 'W') resdate
							 		  FROM RESERVATION r, SCREEN s, MOVIE m, house h, theater t
									 WHERE 1=1
									   AND RESDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
									   AND r.SCREEN_CD = s.SCREEN_CD 
									   AND s.MOVIE_CD = m.MOVIE_CD 
									   AND s.HOUSE_NO = h.HOUSE_NO
									   AND h.THR_NAME = t.THR_NAME
									   <include refid="searchMovieStatistics2" />
									   AND m.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
							 		 GROUP BY TO_CHAR(RESDATE, 'W'), RES_NO 
									  ) a
							GROUP BY a.resdate
						   ) c1,
					  	   (
							SELECT count(s.SCREEN_CD) screencnt, TO_CHAR(s.STARTDATE, 'W') startdate
							  FROM screen s, MOVIE m, house h, theater t 
							  WHERE 1=1
							    AND s.STARTDATE BETWEEN TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'YYYYMMDD') AND LAST_DAY(TO_DATE(#{keyword}))
					 			AND s.MOVIE_CD = m.MOVIE_CD 
							    AND h.house_no = s.house_no
							    AND h.thr_name = t.thr_name
							    <include refid="searchMovieStatistics2" />
							   AND s.MOVIE_CD = (SELECT movie_cd FROM MOVIE m2 WHERE movie_name = #{orderType})
							  GROUP BY TO_CHAR(s.STARTDATE, 'W')
							  ORDER BY TO_CHAR(s.STARTDATE, 'W') ASC
						   ) d1,
					  	   (
					  		SELECT LEVEL AS dt
							  FROM dual 
							CONNECT BY LEVEL <![CDATA[<=]]> ((TO_CHAR(LAST_DAY(TO_DATE(#{keyword})), 'W') - TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'W') + 1) - (TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'W') - TO_CHAR(TRUNC(TO_DATE(#{keyword}),'MM'),'W') + 1) + 1)
					      )cal
					 WHERE cal.dt = a1.resdate(+)
					   AND cal.dt = b1.resdate(+)
					   AND cal.dt = c1.resdate(+)
					   AND cal.dt = d1.startdate(+)
					  ORDER BY cal.dt
		  	   )
	</select>
</mapper>