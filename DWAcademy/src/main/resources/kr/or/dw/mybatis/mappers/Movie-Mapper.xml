<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dw.dao.MovieDAO">

	<select id="selectBoxOfficeMovie10" resultType="Map">
		SELECT movie_cd, movie_name, movie_info, movie_director, movie_actor, movie_grade, movie_length, movie_mainpic_path, opendate, enddate, nvl(reservers, 0) reservers
		FROM (
			SELECT m.*, nvl(reserve, 0) reserve, reservers
			FROM (
				SELECT nvl(sum(reserve), 0) reserve, nvl(sum(reservers), 0) reservers, movie_cd
				FROM (
					SELECT sr2.screen_cd screen_cd, nvl(reserver, 0) reserve, nvl(all_reserver, 0) reservers 
					FROM (
							SELECT count(*) reserver, screen_cd
							FROM reservation r
							WHERE TO_CHAR(resdate, 'YYYYMMDD') =  TO_CHAR(sysdate - 1, 'YYYYMMDD') 
							AND gb_cancel = 'N'
							GROUP BY screen_cd
						) sr, (
							SELECT count(*) all_reserver, screen_cd
							FROM reservation r
							WHERE gb_cancel = 'N'
							GROUP BY screen_cd
						) sr2
					WHERE sr.screen_cd(+) = sr2.screen_cd
					) re, screen s
				WHERE re.screen_cd(+) = s.screen_cd
				GROUP BY movie_cd
				) res, movie m
			WHERE res.movie_cd(+) = m.movie_cd
			ORDER BY reserve DESC NULLS LAST
			)
		WHERE rownum <![CDATA[<=]]> 10
	</select>
	
	<select id="selectMovieDetail" parameterType="str" resultType="movie">
		SELECT *
		FROM movie
		WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectMoviePicture" parameterType="str" resultType="moviePic">
		SELECT *
		FROM movie_picture
		WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectMoviePreview" parameterType="str" resultType="moviePre">
		SELECT *
		FROM movie_preview
		WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectMoviePostByCd" parameterType="str" resultType="moviepost">
		SELECT *
		FROM moviepost
		WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectReviewByCd" parameterType="str" resultType="review">
		SELECT *
		FROM review
		WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectMovieTypeByCd" parameterType="str" resultType="str">
		SELECT movie_type_des
		FROM movie_type_c c, movie_type t
		WHERE c.movie_type_cd = t.movie_type_cd
		AND movie_cd = #{movie_cd}
	</select>
	
	<select id="selectMovieGenreByCd" parameterType="str" resultType="str">
		SELECT genre_name
		FROM genre_c c, genre g 
		WHERE c.genre_cd = g.genre_cd 
		AND movie_cd = #{movie_cd}
	</select>
	
	<select id="selectSearchAllMovie" resultType="Map">
		SELECT m2.movie_cd, reserve, movie_name, movie_grade, movie_length, movie_mainpic_path, opendate
		FROM (
			SELECT m.movie_cd, nvl(sum(reserve), 0) reserve
			FROM (
				SELECT s.*, reserve
				FROM (
					SELECT count(*) reserve, screen_cd
					FROM reservation
					WHERE TO_CHAR(resdate, 'YYYYMMDD') =  TO_CHAR(sysdate - 1, 'YYYYMMDD') 
					AND gb_cancel = 'N'
					GROUP BY screen_cd
					) r, screen s
				WHERE r.screen_cd(+) = s.screen_cd
				) s, movie m
			WHERE s.movie_cd(+) = m.movie_cd
			GROUP BY m.movie_cd
			) m1, movie m2
		WHERE m1.movie_cd = m2.movie_cd
		AND enddate <![CDATA[>]]> SYSDATE
		AND movie_name like '%' || #{keyword} || '%'
		<if test="searchType == 'reserve'.toString()">
			ORDER BY reserve DESC NULLS last
		</if>
		<if test="searchType == 'movie_name'.toString()">
			ORDER BY movie_name
		</if>
		<if test="searchType == 'opendate'.toString()">
			ORDER BY opendate
		</if>
	</select>
	
	<select id="selectYesAllReserver" resultType="int">
		SELECT count(*) all_reserver
		FROM reservation
		WHERE TO_CHAR(resdate, 'YYYYMMDD') =  TO_CHAR(sysdate - 1, 'YYYYMMDD')
		AND GB_CANCEL = 'N'
	</select>
	
	<select id="selectSearchScreenMovie" resultType="Map">
		SELECT m2.movie_cd, reserve, movie_name, movie_grade, movie_length, movie_mainpic_path, opendate
		FROM (
			SELECT m.movie_cd, nvl(sum(reserve), 0) reserve
			FROM (
				SELECT s.*, reserve
				FROM (
					SELECT count(*) reserve, screen_cd
					FROM reservation
					WHERE TO_CHAR(resdate, 'YYYYMMDD') =  TO_CHAR(sysdate - 1, 'YYYYMMDD') 
					AND gb_cancel = 'N'
					GROUP BY screen_cd
					) r, screen s
				WHERE r.screen_cd(+) = s.screen_cd
				) s, movie m
			WHERE s.movie_cd(+) = m.movie_cd
			GROUP BY m.movie_cd
			) m1, movie m2
		WHERE m1.movie_cd = m2.movie_cd
		AND enddate <![CDATA[>]]> SYSDATE
		AND opendate <![CDATA[<]]> sysdate
		AND movie_name like '%' || #{keyword} || '%'
		<if test="searchType == 'reserve'.toString()">
			ORDER BY reserve DESC NULLS last
		</if>
		<if test="searchType == 'movie_name'.toString()">
			ORDER BY movie_name
		</if>
		<if test="searchType == 'opendate'.toString()">
			ORDER BY opendate
		</if>
	</select>
	
	<select id="selectSearchComingMovie" resultType="Map">
		SELECT m2.movie_cd, reserve, movie_name, movie_grade, movie_length, movie_mainpic_path, opendate
		FROM (
			SELECT m.movie_cd, nvl(sum(reserve), 0) reserve
			FROM (
				SELECT s.*, reserve
				FROM (
					SELECT count(*) reserve, screen_cd
					FROM reservation
					WHERE TO_CHAR(resdate, 'YYYYMMDD') =  TO_CHAR(sysdate - 1, 'YYYYMMDD') 
					AND gb_cancel = 'N'
					GROUP BY screen_cd
					) r, screen s
				WHERE r.screen_cd(+) = s.screen_cd
				) s, movie m
			WHERE s.movie_cd(+) = m.movie_cd
			GROUP BY m.movie_cd
			) m1, movie m2
		WHERE m1.movie_cd = m2.movie_cd
		AND enddate <![CDATA[>]]> SYSDATE
		AND opendate <![CDATA[>]]> sysdate
		AND movie_name like '%' || #{keyword} || '%'
		<if test="searchType == 'reserve'.toString()">
			ORDER BY reserve DESC NULLS last
		</if>
		<if test="searchType == 'movie_name'.toString()">
			ORDER BY movie_name
		</if>
		<if test="searchType == 'opendate'.toString()">
			ORDER BY opendate
		</if>
	</select>
	
	<select id="selectMovieLikeExist" resultType="int">
		SELECT COUNT(*)
		FROM movie_like
		WHERE movie_cd = #{movie_cd}
		AND mem_cd = #{mem_cd}
	</select>
	
	<insert id="insertMovieLike">
		INSERT INTO movie_like (movie_cd, mem_cd) VALUES (#{movie_cd}, #{mem_cd})
	</insert>
	
	<delete id="deleteMovieLike">
		DELETE movie_like
		WHERE movie_cd = #{movie_cd}
		AND mem_cd = #{mem_cd}
	</delete>
	
	<select id="selectMovieLikeCount" resultType="int">
		SELECT COUNT(*)
		FROM movie_like
		WHERE movie_cd = #{movie_cd}
	</select>
	
	<select id="selectMovieAllReservers" resultType="int">
		SELECT COUNT(*)
		FROM reservation r, screen s, movie m
		WHERE r.screen_cd = s.screen_cd
		AND s.MOVIE_CD = m.MOVIE_CD 
		AND s.movie_cd = #{movie_cd}
		AND GB_CANCEL = 'N'
	</select>
	
	<select id="selectYesMovieReserver" resultType="int">
		SELECT COUNT(*)
		FROM reservation r, screen s, movie m
		WHERE r.screen_cd = s.screen_cd
		AND s.movie_cd = m.movie_cd 
		AND s.movie_cd = #{movie_cd}
		AND TO_CHAR(resdate, 'YYYYMMDD') = TO_CHAR(sysdate - 1, 'YYYYMMDD') 
		AND GB_CANCEL = 'N'
	</select>
	
	<select id="selectMovieWatchYN" resultType="int">
		SELECT COUNT(*)
		FROM reservation r, screen s
		WHERE r.screen_cd = s.screen_cd
		AND mem_cd = #{mem_cd}
		AND movie_cd = #{movie_cd}
		AND gb_cancel = 'N'
		AND startdate <![CDATA[<]]> sysdate
	</select>
	
	<select id="selectMovieReviewYN" resultType="int">
		SELECT count(*)
		FROM review
		WHERE mem_cd = #{mem_cd}
		AND movie_cd = #{movie_cd}
		AND gb_del = 'N'
	</select>
	
	<insert id="insertReview" parameterType="review">
		INSERT INTO review (review_no, mem_cd, movie_cd, review_rating, review_content, regdate, gb_del) 
		VALUES (review_seq.nextval, #{mem_cd}, #{movie_cd}, #{review_rating}, #{review_content}, sysdate, 'N')
	</insert>
	
	<select id="selectReview3" resultType="review">
		SELECT *
		FROM review
		WHERE gb_del = 'N'
		AND movie_cd = #{movie_cd}
		AND rownum <![CDATA[<=]]> 3
	</select>
</mapper>